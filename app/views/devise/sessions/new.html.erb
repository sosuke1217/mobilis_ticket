<div class="min-vh-100 d-flex align-items-center justify-content-center bg-light">
  <div class="container">
    <div class="row justify-content-center">
      <div class="col-md-6 col-lg-4">
        <div class="card shadow-lg border-0">
          <div class="card-body p-5">
            <!-- ロゴとタイトル -->
            <div class="text-center mb-4">
              <div class="mb-3">
                <div class="logo-container">
                  <%= image_tag "mobilis-logo.png", alt: "Mobilis Logo", class: "logo-image" %>
                </div>
              </div>
              <h2 class="h3 text-dark mb-2">Mobilis</h2>
              <p class="text-muted">管理画面にログイン</p>
            </div>

            <!-- ログインフォーム -->
            <%= form_for(resource, as: resource_name, url: session_path(resource_name), html: { class: "needs-validation", novalidate: true }) do |f| %>
              <!-- メールアドレス -->
              <div class="mb-3">
                <%= f.label :email, "メールアドレス", class: "form-label fw-bold text-dark" %>
                <div class="input-group">
                  <span class="input-group-text bg-light border-end-0">
                    <i class="fas fa-envelope text-muted"></i>
                  </span>
                  <%= f.email_field :email, 
                      autofocus: true, 
                      autocomplete: "email",
                      class: "form-control border-start-0",
                      placeholder: "admin@example.com",
                      required: true %>
                </div>
              </div>

              <!-- パスワード -->
              <div class="mb-3">
                <%= f.label :password, "パスワード", class: "form-label fw-bold text-dark" %>
                <div class="input-group">
                  <span class="input-group-text bg-light border-end-0">
                    <i class="fas fa-lock text-muted"></i>
                  </span>
                  <%= f.password_field :password, 
                      autocomplete: "current-password",
                      class: "form-control border-start-0",
                      placeholder: "パスワードを入力",
                      required: true %>
                </div>
              </div>

              <!-- ログイン状態を保持 -->
              <% if devise_mapping.rememberable? %>
                <div class="mb-4">
                  <div class="form-check">
                    <%= f.check_box :remember_me, class: "form-check-input" %>
                    <%= f.label :remember_me, "ログイン状態を保持", class: "form-check-label text-muted" %>
                  </div>
                </div>
              <% end %>

              <!-- ログインボタン -->
              <div class="d-grid mb-3">
                <%= f.submit "ログイン", class: "btn btn-primary btn-lg fw-bold" %>
              </div>
            <% end %>
          </div>
        </div>

        <!-- フッター情報 -->
        <div class="text-center mt-4">
          <small class="text-muted">
            &copy; 2025 Mobilis. All rights reserved.
          </small>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- カスタムCSS -->
<style>
  /* ロゴスタイリング */
  .logo-container {
    display: inline-block;
    padding: 1.5rem;
    border-radius: 50%;
    background: linear-gradient(135deg, rgba(0, 212, 255, 0.1) 0%, rgba(0, 153, 204, 0.1) 100%);
    border: 2px solid rgba(0, 212, 255, 0.2);
  }
  
  .logo-image {
    width: 100px;
    height: 100px;
    object-fit: contain;
    filter: drop-shadow(0 4px 8px rgba(0, 212, 255, 0.3));
    transition: all 0.3s ease;
  }
  
  .logo-container:hover .logo-image {
    transform: scale(1.1);
    filter: drop-shadow(0 6px 12px rgba(0, 212, 255, 0.4));
  }
  
  /* カードスタイリング */
  .card {
    border-radius: 1rem;
  }
  
  /* フォームコントロール */
  .form-control:focus {
    border-color: #0d6efd;
    box-shadow: 0 0 0 0.2rem rgba(13, 110, 253, 0.25);
  }
  
  .form-control:focus + .input-group-text {
    border-color: #0d6efd;
  }
  
  .input-group-text {
    border-color: #dee2e6;
  }
  
  .form-control {
    border-color: #dee2e6;
  }
  
  /* ボタンスタイリング */
  .btn-primary {
    background: linear-gradient(135deg, #0d6efd 0%, #0b5ed7 100%);
    border: none;
    padding: 0.75rem 2rem;
    font-weight: 600;
    transition: all 0.3s ease;
    text-align: center !important;
    text-align-last: center !important;
    direction: ltr !important;
  }
  
  /* より具体的なセレクターで優先順位を上げる */
  input[type="submit"].btn-primary,
  button.btn-primary {
    text-align: center !important;
    text-align-last: center !important;
    direction: ltr !important;
  }
  
  .btn-primary:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(13, 110, 253, 0.4);
    text-align: center !important;
    text-align-last: center !important;
    direction: ltr !important;
  }
  
  /* テキスト位置の基本設定 */
  input[type="email"],
  input[type="password"] {
    text-align: left !important;
    direction: ltr !important;
  }
  
  /* プレースホルダーの位置設定 */
  input[type="email"]::placeholder,
  input[type="password"]::placeholder {
    text-align: left !important;
    direction: ltr !important;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const emailInput = document.querySelector('input[type="email"]');
    const passwordInput = document.querySelector('input[type="password"]');
    const loginButton = document.querySelector('.btn-primary');
    
    function forceLeftAlign(input) {
      if (input && input.tagName === 'INPUT') {  // 入力フィールドのみに限定
        input.style.textAlign = 'left';
        input.style.textAlignLast = 'left';
        input.style.direction = 'ltr';
        input.style.textIndent = '0';
        input.style.marginLeft = '0';
        input.style.marginRight = '0';
      }
    }
    
    function forceCenterAlign(button) {
      if (button) {
        button.style.textAlign = 'center';
        button.style.textAlignLast = 'center';
        button.style.direction = 'ltr';
      }
    }
    
    function applyLeftAlign() {
      forceLeftAlign(emailInput);
      forceLeftAlign(passwordInput);
    }
    
    function applyCenterAlign() {
      forceCenterAlign(loginButton);
    }
    
    // 初期設定
    applyLeftAlign();
    applyCenterAlign();
    
    // フォーカス時に適用
    if (emailInput) {
      emailInput.addEventListener('focus', applyLeftAlign);
      emailInput.addEventListener('input', applyLeftAlign);
      emailInput.addEventListener('click', applyLeftAlign);
    }
    
    if (passwordInput) {
      passwordInput.addEventListener('focus', applyLeftAlign);
      passwordInput.addEventListener('input', applyLeftAlign);
      passwordInput.addEventListener('click', applyLeftAlign);
    }
    
    // 定期的に適用（他のCSSが上書きした場合の対策）- 入力フィールドのみ
    setInterval(function() {
      if (emailInput && emailInput.tagName === 'INPUT') applyLeftAlign();
      if (passwordInput && passwordInput.tagName === 'INPUT') applyLeftAlign();
      if (loginButton) applyCenterAlign();
    }, 100);
  });
</script>
