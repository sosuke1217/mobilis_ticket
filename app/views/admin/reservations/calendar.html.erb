<!-- app/views/admin/reservations/calendar.html.erb の強化版 -->
<div class="container my-4">
  <div class="d-flex justify-content-between align-items-center mb-3">
    <h2>予約カレンダー</h2>
    <div class="btn-group">
      <button type="button" class="btn btn-outline-secondary dropdown-toggle" data-bs-toggle="dropdown">
        表示オプション
      </button>
      <ul class="dropdown-menu">
        <li><a class="dropdown-item" href="#" id="showAllReservations">全ての予約</a></li>
        <li><a class="dropdown-item" href="#" id="showConfirmedOnly">確定予約のみ</a></li>
        <li><a class="dropdown-item" href="#" id="showTentativeOnly">仮予約のみ</a></li>
        <li><hr class="dropdown-divider"></li>
        <li><a class="dropdown-item" href="#" id="showRecurringOnly">繰り返し予約のみ</a></li>
      </ul>
    </div>
  </div>

  <!-- ステータス凡例 -->
  <div class="card mb-3">
    <div class="card-body py-2">
      <div class="row align-items-center">
        <div class="col-auto">
          <strong>ステータス凡例：</strong>
        </div>
        <div class="col">
          <span class="badge bg-success me-2">確定</span>
          <span class="badge bg-warning text-dark me-2">仮予約</span>
          <span class="badge bg-danger me-2">キャンセル</span>
          <span class="badge bg-secondary me-2">完了</span>
          <span class="badge bg-warning me-2">無断キャンセル</span>
        </div>
      </div>
    </div>
  </div>
  
  <div class="table-responsive">
    <div id="calendar" style="width: 100%; max-width: 100%; margin: auto;"></div>
  </div>
</div>

<!-- 予約詳細・編集モーダル（強化版） -->
<div class="modal fade" id="reservationModal" tabindex="-1" aria-labelledby="reservationModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-xl">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="reservationModalLabel">予約管理</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="閉じる"></button>
      </div>
      <div class="modal-body">
        <!-- タブナビゲーション -->
        <ul class="nav nav-tabs" id="reservationTabs" role="tablist">
          <li class="nav-item" role="presentation">
            <button class="nav-link active" id="basic-tab" data-bs-toggle="tab" data-bs-target="#basic" type="button" role="tab">
              基本情報
            </button>
          </li>
          <li class="nav-item" role="presentation">
            <button class="nav-link" id="status-tab" data-bs-toggle="tab" data-bs-target="#status" type="button" role="tab">
              ステータス管理
            </button>
          </li>
          <li class="nav-item" role="presentation">
            <button class="nav-link" id="recurring-tab" data-bs-toggle="tab" data-bs-target="#recurring" type="button" role="tab">
              繰り返し予約
            </button>
          </li>
        </ul>

        <!-- タブコンテンツ -->
        <div class="tab-content" id="reservationTabContent">
          <!-- 基本情報タブ -->
          <div class="tab-pane fade show active" id="basic" role="tabpanel">
            <form id="reservationForm" class="mt-3">
              <!-- 既存の基本情報フォーム -->
              <div class="card mb-3">
                <div class="card-header">
                  <div class="d-flex justify-content-between align-items-center">
                    <h6 class="mb-0">予約者選択</h6>
                    <div class="form-check form-switch">
                      <input class="form-check-input" type="checkbox" id="newUserToggle">
                      <label class="form-check-label" for="newUserToggle">
                        新規ユーザーを作成
                      </label>
                    </div>
                  </div>
                </div>
                <div class="card-body">
                  <!-- 既存ユーザー選択 -->
                  <div id="existingUserSection">
                    <label for="reservationUserId" class="form-label">既存ユーザーを選択</label>
                    <select class="form-control" id="reservationUserId">
                      <option value="">ユーザーを選択してください</option>
                    </select>
                  </div>

                  <!-- 新規ユーザー作成フォーム -->
                  <div id="newUserSection" style="display: none;">
                    <div class="row">
                      <div class="col-md-6">
                        <label for="newUserName" class="form-label">氏名 <span class="text-danger">*</span></label>
                        <input type="text" class="form-control" id="newUserName" placeholder="例: 山田太郎">
                      </div>
                      <div class="col-md-6">
                        <label for="newUserPhone" class="form-label">電話番号</label>
                        <input type="tel" class="form-control" id="newUserPhone" placeholder="例: 090-1234-5678">
                      </div>
                    </div>
                    <div class="row mt-2">
                      <div class="col-md-6">
                        <label for="newUserEmail" class="form-label">メールアドレス</label>
                        <input type="email" class="form-control" id="newUserEmail" placeholder="例: example@email.com">
                      </div>
                      <div class="col-md-6">
                        <label for="newUserBirthDate" class="form-label">生年月日</label>
                        <input type="date" class="form-control" id="newUserBirthDate">
                      </div>
                    </div>
                    <div class="mt-2">
                      <label for="newUserAddress" class="form-label">住所</label>
                      <input type="text" class="form-control" id="newUserAddress" placeholder="例: 東京都渋谷区...">
                    </div>
                    <div class="mt-2">
                      <label for="newUserMemo" class="form-label">管理者メモ</label>
                      <textarea class="form-control" id="newUserMemo" rows="2" placeholder="初回来店、アレルギー情報など"></textarea>
                    </div>
                  </div>
                </div>
              </div>

              <!-- 予約詳細セクション -->
              <div class="card mb-3">
                <div class="card-header">
                  <h6 class="mb-0">予約詳細</h6>
                </div>
                <div class="card-body">
                  <div class="row">
                    <div class="col-md-6">
                      <label for="reservationDate" class="form-label">予約日</label>
                      <input type="date" class="form-control" id="reservationDate" required>
                    </div>
                    <div class="col-md-6">
                      <label for="reservationTime" class="form-label">開始時間</label>
                      <select class="form-control" id="reservationTime" required>
                        <option value="">時間を選択してください</option>
                      </select>
                    </div>
                  </div>

                  <div class="row mt-2">
                    <div class="col-md-6">
                      <label for="reservationCourse" class="form-label">コース</label>
                      <select class="form-control" id="reservationCourse">
                        <option value="40分">40分コース</option>
                        <option value="60分" selected>60分コース</option>
                        <option value="80分">80分コース</option>
                      </select>
                    </div>
                    <div class="col-md-6">
                      <label class="form-label">終了予定時間</label>
                      <div id="endTimeDisplay" class="form-control-plaintext text-muted">時間とコースを選択してください</div>
                    </div>
                  </div>

                  <div class="mt-2">
                    <label for="reservationNote" class="form-label">備考</label>
                    <textarea class="form-control" id="reservationNote" rows="2" placeholder="特別な要望や注意事項など"></textarea>
                  </div>
                </div>
              </div>

              <!-- 隠しフィールド -->
              <input type="hidden" id="reservationStartTime">
              <input type="hidden" id="reservationId">
              <input type="hidden" id="reservationName">
            </form>
          </div>

          <!-- ステータス管理タブ -->
          <div class="tab-pane fade" id="status" role="tabpanel">
            <div class="mt-3">
              <div class="card">
                <div class="card-header">
                  <h6 class="mb-0">予約ステータス管理</h6>
                </div>
                <div class="card-body">
                  <div class="row">
                    <div class="col-md-6">
                      <label for="reservationStatus" class="form-label">現在のステータス</label>
                      <select class="form-control" id="reservationStatus">
                        <option value="confirmed">確定</option>
                        <option value="tentative">仮予約</option>
                        <option value="cancelled">キャンセル</option>
                        <option value="completed">完了</option>
                        <option value="no_show">無断キャンセル</option>
                      </select>
                    </div>
                    <div class="col-md-6">
                      <label class="form-label">最終変更日時</label>
                      <div id="lastUpdated" class="form-control-plaintext text-muted">-</div>
                    </div>
                  </div>

                  <!-- キャンセル理由入力エリア -->
                  <div id="cancellationReasonArea" style="display: none;" class="mt-3">
                    <label for="cancellationReason" class="form-label">キャンセル理由 <span class="text-danger">*</span></label>
                    <textarea class="form-control" id="cancellationReason" rows="3" placeholder="キャンセルの理由を入力してください"></textarea>
                  </div>

                  <div class="mt-3">
                    <button type="button" class="btn btn-primary" id="updateStatusBtn">ステータスを更新</button>
                  </div>
                </div>
              </div>

              <!-- メール送信セクション -->
              <div class="card mt-3">
                <div class="card-header">
                  <h6 class="mb-0">メール送信</h6>
                </div>
                <div class="card-body">
                  <div class="row">
                    <div class="col-md-6">
                      <div class="d-grid">
                        <button type="button" class="btn btn-outline-primary" id="sendConfirmationBtn">
                          <i class="fas fa-envelope me-1"></i>確認メール再送信
                        </button>
                      </div>
                    </div>
                    <div class="col-md-6">
                      <div class="d-grid">
                        <button type="button" class="btn btn-outline-info" id="sendReminderBtn">
                          <i class="fas fa-bell me-1"></i>リマインダー送信
                        </button>
                      </div>
                    </div>
                  </div>
                  <div class="mt-2">
                    <small class="text-muted">
                      確認メール送信: <span id="confirmationSentAt">未送信</span><br>
                      リマインダー送信: <span id="reminderSentAt">未送信</span>
                    </small>
                  </div>
                </div>
              </div>
            </div>
          </div>

          <!-- 繰り返し予約タブ -->
          <div class="tab-pane fade" id="recurring" role="tabpanel">
            <div class="mt-3">
              <div class="card">
                <div class="card-header">
                  <h6 class="mb-0">繰り返し予約設定</h6>
                </div>
                <div class="card-body">
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="isRecurring">
                    <label class="form-check-label" for="isRecurring">
                      この予約を繰り返し予約にする
                    </label>
                  </div>

                  <div id="recurringSettings" style="display: none;" class="mt-3">
                    <div class="row">
                      <div class="col-md-6">
                        <label for="recurringType" class="form-label">繰り返しパターン</label>
                        <select class="form-control" id="recurringType">
                          <option value="weekly">毎週</option>
                          <option value="monthly">毎月</option>
                        </select>
                      </div>
                      <div class="col-md-6">
                        <label for="recurringUntil" class="form-label">終了日</label>
                        <input type="date" class="form-control" id="recurringUntil">
                      </div>
                    </div>

                    <div class="mt-3">
                      <button type="button" class="btn btn-success" id="createRecurringBtn">
                        <i class="fas fa-repeat me-1"></i>繰り返し予約を作成
                      </button>
                    </div>
                  </div>

                  <!-- 既存の繰り返し予約情報 -->
                  <div id="existingRecurring" style="display: none;" class="mt-3">
                    <div class="alert alert-info">
                      <h6><i class="fas fa-info-circle me-1"></i>この予約は繰り返し予約です</h6>
                      <p class="mb-0">
                        パターン: <span id="currentRecurringType">-</span><br>
                        終了日: <span id="currentRecurringUntil">-</span><br>
                        子予約数: <span id="childReservationsCount">-</span>件
                      </p>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- ボタンエリア -->
        <div class="d-flex justify-content-between mt-4">
          <div>
            <button type="button" id="deleteReservationBtn" class="btn btn-danger d-none">
              <i class="fas fa-trash me-1"></i>削除
            </button>
            <button type="button" id="cancelReservationBtn" class="btn btn-warning d-none">
              <i class="fas fa-times me-1"></i>キャンセル
            </button>
          </div>
          <div>
            <button type="button" class="btn btn-secondary me-2" data-bs-dismiss="modal">閉じる</button>
            <button type="submit" form="reservationForm" class="btn btn-primary">
              <i class="fas fa-save me-1"></i>保存
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
// JavaScript for enhanced calendar functionality
(function() {
  'use strict';
  
  let pageCalendar = null;
  
  function createEnhancedCalendar() {
    const calendarEl = document.getElementById('calendar');
    if (!calendarEl || typeof FullCalendar === 'undefined') {
      setTimeout(createEnhancedCalendar, 500);
      return;
    }
    
    if (pageCalendar) {
      pageCalendar.destroy();
      pageCalendar = null;
    }
    
    pageCalendar = new FullCalendar.Calendar(calendarEl, {
      initialView: window.innerWidth < 768 ? "timeGridDay" : "timeGridWeek",
      locale: 'ja',
      headerToolbar: {
        left: 'prev,next today',
        center: 'title',
        right: 'timeGridWeek,timeGridDay'
      },
      slotMinTime: "10:00:00",
      slotMaxTime: "20:30:00",
      slotDuration: "00:10:00",
      scrollTime: "10:00:00",
      height: "auto",
      
      // ドラッグ&ドロップを有効化
      editable: true,
      droppable: true,
      eventStartEditable: true,
      eventDurationEditable: true,
      snapDuration: '00:10:00',
      
      events: {
        url: "/admin/reservations.json",
        failure: function() {
          console.error("Failed to fetch events");
        }
      },
      
      // イベントの色をステータスに応じて変更
      eventDidMount: function(info) {
        const status = info.event.extendedProps.status;
        let backgroundColor, borderColor;
        
        switch(status) {
          case 'confirmed':
            backgroundColor = '#28a745';
            borderColor = '#1e7e34';
            break;
          case 'tentative':
            backgroundColor = '#ffc107';
            borderColor = '#e0a800';
            info.el.style.color = '#000';
            break;
          case 'cancelled':
            backgroundColor = '#dc3545';
            borderColor = '#c82333';
            info.el.style.textDecoration = 'line-through';
            break;
          case 'completed':
            backgroundColor = '#6c757d';
            borderColor = '#5a6268';
            break;
          case 'no_show':
            backgroundColor = '#fd7e14';
            borderColor = '#e55a00';
            break;
          default:
            backgroundColor = '#007bff';
            borderColor = '#0056b3';
        }
        
        info.el.style.backgroundColor = backgroundColor;
        info.el.style.borderColor = borderColor;
      },
      
      dateClick: function(info) {
        openReservationModal(null, info.dateStr);
      },
      
      eventClick: function(info) {
        openReservationModal(info.event);
      },
      
      eventDrop: function(info) {
        updateReservationTime(info.event, info.revert);
      },
      
      eventResize: function(info) {
        updateReservationTime(info.event, info.revert);
      }
    });
    
    pageCalendar.render();
    window.pageCalendar = pageCalendar;
  }
  
  // 予約時間を更新する関数
  function updateReservationTime(event, revertFunc) {
    const reservationId = event.id;
    const newStartTime = event.start.toISOString();
    const newEndTime = event.end ? event.end.toISOString() : null;
    
    if (!confirm(`予約「${event.title}」の時間を変更しますか？`)) {
      revertFunc();
      return;
    }
    
    fetch(`/admin/reservations/${reservationId}`, {
      method: 'PATCH',
      headers: {
        'Content-Type': 'application/json',
        'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]')?.content || '',
        'Accept': 'application/json'
      },
      body: JSON.stringify({
        reservation: {
          start_time: newStartTime,
          end_time: newEndTime
        }
      })
    })
    .then(response => response.json())
    .then(data => {
      if (data.success !== false) {
        showSuccessMessage(`予約「${event.title}」の時間を変更しました`);
      } else {
        revertFunc();
        showErrorMessage(data.errors ? data.errors.join(', ') : '時間の変更に失敗しました');
      }
    })
    .catch(error => {
      console.error('Update failed:', error);
      revertFunc();
      showErrorMessage(`時間の変更に失敗しました: ${error.message}`);
    });
  }
  
  // 強化されたモーダル開く関数
  function openReservationModal(event = null, dateStr = null) {
    const modal = document.getElementById('reservationModal');
    if (!modal) return;
    
    // タブを基本情報にリセット
    const basicTab = document.getElementById('basic-tab');
    if (basicTab) {
      basicTab.click();
    }
    
    if (event) {
      // 既存予約の編集
      document.getElementById('reservationId').value = event.id || '';
      document.getElementById('reservationUserId').value = event.extendedProps?.user_id || '';
      document.getElementById('reservationName').value = event.title || '';
      
      // ステータス情報を設定
      const statusSelect = document.getElementById('reservationStatus');
      if (statusSelect) {
        statusSelect.value = event.extendedProps?.status || 'confirmed';
      }
      
      // キャンセル・削除ボタンの表示制御
      const deleteBtn = document.getElementById('deleteReservationBtn');
      const cancelBtn = document.getElementById('cancelReservationBtn');
      
      if (deleteBtn) deleteBtn.classList.remove('d-none');
      
      if (cancelBtn) {
        if (event.extendedProps?.status === 'cancelled') {
          cancelBtn.classList.add('d-none');
        } else {
          cancelBtn.classList.remove('d-none');
        }
      }
      
      // 繰り返し予約情報の表示
      if (event.extendedProps?.recurring) {
        document.getElementById('existingRecurring').style.display = 'block';
        document.getElementById('currentRecurringType').textContent = 
          event.extendedProps.recurring_type === 'weekly' ? '毎週' : '毎月';
        document.getElementById('currentRecurringUntil').textContent = 
          event.extendedProps.recurring_until || '-';
      } else {
        document.getElementById('existingRecurring').style.display = 'none';
      }
      
    } else {
      // 新規予約
      document.getElementById('reservationId').value = '';
      document.getElementById('deleteReservationBtn').classList.add('d-none');
      document.getElementById('cancelReservationBtn').classList.add('d-none');
      document.getElementById('existingRecurring').style.display = 'none';
    }
    
    // モーダルを表示
    new bootstrap.Modal(modal).show();
  }
  
  // ステータス更新機能
  function initializeStatusManagement() {
    const statusSelect = document.getElementById('reservationStatus');
    const cancellationArea = document.getElementById('cancellationReasonArea');
    const updateBtn = document.getElementById('updateStatusBtn');
    
    if (statusSelect && cancellationArea) {
      statusSelect.addEventListener('change', function() {
        if (this.value === 'cancelled') {
          cancellationArea.style.display = 'block';
          document.getElementById('cancellationReason').required = true;
        } else {
          cancellationArea.style.display = 'none';
          document.getElementById('cancellationReason').required = false;
        }
      });
    }
    
    if (updateBtn) {
      updateBtn.addEventListener('click', function() {
        const reservationId = document.getElementById('reservationId').value;
        const newStatus = statusSelect.value;
        const cancellationReason = document.getElementById('cancellationReason').value;
        
        if (newStatus === 'cancelled' && !cancellationReason.trim()) {
          alert('キャンセル理由を入力してください');
          return;
        }
        
        updateReservationStatus(reservationId, newStatus, cancellationReason);
      });
    }
  }
  
  // 予約ステータス更新
  function updateReservationStatus(reservationId, status, cancellationReason = '') {
    const url = status === 'cancelled' 
      ? `/admin/reservations/${reservationId}/cancel`
      : `/admin/reservations/${reservationId}/change_status`;
    
    const body = status === 'cancelled'
      ? { cancellation_reason: cancellationReason }
      : { status: status };
    
    fetch(url, {
      method: 'PATCH',
      headers: {
        'Content-Type': 'application/json',
        'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]')?.content || ''
      },
      body: JSON.stringify(body)
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        showSuccessMessage(data.message);
        if (pageCalendar) {
          pageCalendar.refetchEvents();
        }
        // モーダルを閉じる
        const modal = bootstrap.Modal.getInstance(document.getElementById('reservationModal'));
        if (modal) modal.hide();
      } else {
        showErrorMessage(data.error || 'ステータス更新に失敗しました');
      }
    })
    .catch(error => {
      console.error('Status update failed:', error);
      showErrorMessage('ステータス更新中にエラーが発生しました');
    });
  }
  
  // 繰り返し予約機能
  function initializeRecurringReservations() {
    const isRecurringCheck = document.getElementById('isRecurring');
    const recurringSettings = document.getElementById('recurringSettings');
    const createBtn = document.getElementById('createRecurringBtn');
    
    if (isRecurringCheck && recurringSettings) {
      isRecurringCheck.addEventListener('change', function() {
        recurringSettings.style.display = this.checked ? 'block' : 'none';
      });
    }
    
    if (createBtn) {
      createBtn.addEventListener('click', function() {
        const reservationId = document.getElementById('reservationId').value;
        const recurringType = document.getElementById('recurringType').value;
        const recurringUntil = document.getElementById('recurringUntil').value;
        
        if (!reservationId) {
          alert('予約を先に保存してから繰り返し設定を行ってください');
          return;
        }
        
        if (!recurringUntil) {
          alert('終了日を選択してください');
          return;
        }
        
        createRecurringReservations(reservationId, recurringType, recurringUntil);
      });
    }
  }
  
  // 繰り返し予約作成
  function createRecurringReservations(reservationId, recurringType, recurringUntil) {
    fetch(`/admin/reservations/${reservationId}/create_recurring`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]')?.content || ''
      },
      body: JSON.stringify({
        recurring_type: recurringType,
        recurring_until: recurringUntil
      })
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        showSuccessMessage(data.message);
        if (pageCalendar) {
          pageCalendar.refetchEvents();
        }
        // モーダルを閉じる
        const modal = bootstrap.Modal.getInstance(document.getElementById('reservationModal'));
        if (modal) modal.hide();
      } else {
        showErrorMessage(data.error || '繰り返し予約の作成に失敗しました');
      }
    })
    .catch(error => {
      console.error('Recurring reservation creation failed:', error);
      showErrorMessage('繰り返し予約作成中にエラーが発生しました');
    });
  }
  
  // メール送信機能
  function initializeEmailFunctions() {
    const confirmationBtn = document.getElementById('sendConfirmationBtn');
    const reminderBtn = document.getElementById('sendReminderBtn');
    
    if (confirmationBtn) {
      confirmationBtn.addEventListener('click', function() {
        const reservationId = document.getElementById('reservationId').value;
        if (reservationId) {
          sendEmail(reservationId, 'confirmation');
        }
      });
    }
    
    if (reminderBtn) {
      reminderBtn.addEventListener('click', function() {
        const reservationId = document.getElementById('reservationId').value;
        if (reservationId) {
          sendEmail(reservationId, 'reminder');
        }
      });
    }
  }
  
  // メール送信
  function sendEmail(reservationId, type) {
    fetch(`/admin/reservations/${reservationId}/send_email`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]')?.content || ''
      },
      body: JSON.stringify({ email_type: type })
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        showSuccessMessage(`${type === 'confirmation' ? '確認' : 'リマインダー'}メールを送信しました`);
      } else {
        showErrorMessage(data.error || 'メール送信に失敗しました');
      }
    })
    .catch(error => {
      console.error('Email sending failed:', error);
      showErrorMessage('メール送信中にエラーが発生しました');
    });
  }
  
  // フィルタリング機能
  function initializeFiltering() {
    const filterButtons = [
      'showAllReservations',
      'showConfirmedOnly', 
      'showTentativeOnly',
      'showRecurringOnly'
    ];
    
    filterButtons.forEach(buttonId => {
      const button = document.getElementById(buttonId);
      if (button) {
        button.addEventListener('click', function(e) {
          e.preventDefault();
          applyFilter(buttonId);
        });
      }
    });
  }
  
  // フィルター適用
  function applyFilter(filterType) {
    if (!pageCalendar) return;
    
    let filterFunction;
    
    switch(filterType) {
      case 'showConfirmedOnly':
        filterFunction = (event) => event.extendedProps?.status === 'confirmed';
        break;
      case 'showTentativeOnly':
        filterFunction = (event) => event.extendedProps?.status === 'tentative';
        break;
      case 'showRecurringOnly':
        filterFunction = (event) => event.extendedProps?.recurring === true;
        break;
      default:
        filterFunction = () => true; // 全て表示
    }
    
    // フィルターを適用してイベントを再描画
    const allEvents = pageCalendar.getEvents();
    allEvents.forEach(event => {
      if (filterFunction(event)) {
        event.setProp('display', 'auto');
      } else {
        event.setProp('display', 'none');
      }
    });
  }
  
  // 成功・エラーメッセージ表示
  function showSuccessMessage(message) {
    showMessage(message, 'success');
  }
  
  function showErrorMessage(message) {
    showMessage(message, 'danger');
  }
  
  function showMessage(message, type) {
    const alertDiv = document.createElement('div');
    alertDiv.className = `alert alert-${type} alert-dismissible fade show position-fixed`;
    alertDiv.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';
    alertDiv.innerHTML = `
      ${message}
      <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    `;
    document.body.appendChild(alertDiv);
    
    setTimeout(() => {
      if (alertDiv.parentNode) {
        alertDiv.parentNode.removeChild(alertDiv);
      }
    }, 5000);
  }
  
  // 初期化
  function initialize() {
    createEnhancedCalendar();
    initializeStatusManagement();
    initializeRecurringReservations();
    initializeEmailFunctions();
    initializeFiltering();
  }
  
  // グローバル関数として公開
  window.openReservationModal = openReservationModal;
  window.updateReservationStatus = updateReservationStatus;
  window.createRecurringReservations = createRecurringReservations;
  
  // イベントリスナー
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initialize);
  } else {
    initialize();
  }
  
  document.addEventListener('turbo:load', initialize);
  
  document.addEventListener('turbo:before-cache', function() {
    if (pageCalendar) {
      pageCalendar.destroy();
      pageCalendar = null;
    }
  });
  
})();
</script>