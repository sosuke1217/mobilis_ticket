<% content_for :head do %>
  <meta name="turbo-visit-control" content="disable">
<% end %>

<div class="container-lg my-5">
  <div class="d-flex align-items-center mb-4">
    <div>
      <h1 class="mb-1">
        <%= @user.display_name_or_name || @user.line_user_id %> さんの詳細
      </h1>
      <% if @user.display_name.present? && @user.name.present? && @user.display_name != @user.name %>
        <p class="text-muted mb-0">登録名: <%= @user.name %></p>
      <% end %>
    </div>
  </div>

  <div class="card mb-4">
    <div class="card-header bg-light">
      <h5 class="card-title mb-0">
        <i class="fas fa-link me-2"></i>LINE連携状況
      </h5>
    </div>
    <div class="card-body">
      <div class="row align-items-center">
        <div class="col-md-8">
          <% if @user.line_user_id.present? && @user.line_user_id != '' %>
            <div class="d-flex align-items-center mb-3">
              <span class="badge bg-success fs-6 me-3">
                <i class="fas fa-link me-2"></i>連携済み
              </span>
              <span class="text-muted">
                <strong>LINE ID:</strong> <%= @user.line_user_id %>
              </span>
            </div>
            <div class="btn-group" role="group">
              <%= link_to update_line_profile_admin_user_path(@user), 
                  method: :patch, 
                  class: "btn btn-outline-primary",
                  data: { confirm: "LINEから最新のユーザー情報を取得しますか？" } do %>
                <i class="fas fa-sync-alt me-2"></i>LINE情報を更新
              <% end %>
              <button type="button" class="btn btn-outline-danger" onclick="removeLineLink()">
                <i class="fas fa-unlink me-2"></i>連携解除
              </button>
            </div>
          <% else %>
            <div class="d-flex align-items-center mb-3">
              <span class="badge bg-danger fs-6 me-3">
                <i class="fas fa-unlink me-2"></i>未連携
              </span>
              <span class="text-muted">LINEボットとの連携が設定されていません</span>
            </div>
            <button type="button" class="btn btn-success" onclick="showLineLinkForm()">
              <i class="fas fa-link me-2"></i>LINE連携を作成
            </button>
          <% end %>
        </div>
        <div class="col-md-4 text-end">
          <% if @user.line_user_id.present? && @user.line_user_id != '' %>
            <div class="text-success">
              <i class="fas fa-check-circle me-1"></i>
              <small>LINE通知が有効です</small>
            </div>
          <% else %>
            <div class="text-muted">
              <i class="fas fa-info-circle me-1"></i>
              <small>LINE通知は無効です</small>
            </div>
          <% end %>
        </div>
      </div>
    </div>
  </div>

  <!-- LINE連携フォーム（モーダル） -->
  <div class="modal fade" id="lineLinkModal" tabindex="-1" aria-labelledby="lineLinkModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
      <div class="modal-content">
        <div class="modal-header bg-primary text-white">
          <h4 class="modal-title" id="lineLinkModalLabel">
            <i class="fas fa-link me-2"></i>LINE連携作成
          </h4>
          <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body p-4">
          <div class="row">
            <div class="col-12">
              <div class="alert alert-info">
                <i class="fas fa-info-circle me-2"></i>
                <strong>LINE連携について</strong><br>
                ユーザーがLINEボットと友達になると、自動的にLINEユーザーIDが取得されます。<br>
                そのIDを入力することで、LINEからの通知やプロフィール情報の自動更新が可能になります。
              </div>
            </div>
          </div>
          
          <form id="lineLinkForm">
            <div class="row">
              <div class="col-12">
                <div class="mb-4">
                  <label for="lineUserId" class="form-label fw-bold fs-5">
                    <i class="fas fa-user-circle me-2"></i>LINEユーザーID
                  </label>
                  <input type="text" class="form-control form-control-lg" id="lineUserId" name="line_user_id" 
                         placeholder="例: U1234567890abcdef" required>
                  <div class="form-text fs-6">
                    <i class="fas fa-lightbulb me-1"></i>
                    LINEボットから取得したユーザーIDを入力してください。<br>
                    通常は「U」で始まる英数字の文字列です。
                  </div>
                </div>
              </div>
            </div>
            
            <div class="row">
              <div class="col-12">
                <div class="card bg-light">
                  <div class="card-body">
                    <h6 class="card-title">
                      <i class="fas fa-question-circle me-2"></i>LINEユーザーIDの確認方法
                    </h6>
                    <ol class="mb-0">
                      <li>LINEボットと友達になる</li>
                      <li>何かメッセージを送信する</li>
                      <li>管理者がLINEボットの管理画面でユーザーIDを確認</li>
                      <li>そのIDを上記の入力欄に入力</li>
                    </ol>
                  </div>
                </div>
              </div>
            </div>
          </form>
        </div>
        <div class="modal-footer bg-light p-4">
          <div class="d-flex justify-content-between w-100">
            <button type="button" class="btn btn-secondary btn-lg px-4" data-bs-dismiss="modal">
              <i class="fas fa-times me-2"></i>キャンセル
            </button>
            <button type="button" class="btn btn-primary btn-lg px-5" onclick="createLineLink()">
              <i class="fas fa-link me-2"></i>連携作成
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script>
    function showLineLinkForm() {
      const modal = new bootstrap.Modal(document.getElementById('lineLinkModal'));
      modal.show();
      
      // フォーカスを入力フィールドに設定
      setTimeout(() => {
        document.getElementById('lineUserId').focus();
      }, 500);
    }

    function createLineLink() {
      const lineUserId = document.getElementById('lineUserId').value.trim();
      if (!lineUserId) {
        alert('LINEユーザーIDを入力してください');
        document.getElementById('lineUserId').focus();
        return;
      }

      const userId = '<%= @user.id %>';
      const token = document.querySelector('meta[name="csrf-token"]')?.getAttribute('content');
      
      if (!token) {
        alert('セキュリティトークンが見つかりません。ページを再読み込みしてください。');
        return;
      }

      // ボタンを無効化
      const button = event.target;
      const originalText = button.textContent;
      button.disabled = true;
      button.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>連携中...';

      fetch(`/admin/users/${userId}/create_line_link`, {
        method: 'POST',
        headers: {
          'X-CSRF-Token': token,
          'Content-Type': 'application/json',
          'Accept': 'application/json'
        },
        body: JSON.stringify({ line_user_id: lineUserId })
      })
      .then(response => {
        if (response.ok) {
          return response.json();
        } else {
          throw new Error(`HTTP ${response.status}: ${response.statusText}`);
        }
      })
      .then(data => {
        // 成功メッセージを表示
        const successAlert = document.createElement('div');
        successAlert.className = 'alert alert-success alert-dismissible fade show';
        successAlert.innerHTML = `
          <i class="fas fa-check-circle me-2"></i>
          <strong>成功！</strong> LINE連携を作成しました。
          <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        `;
        
        // アラートを表示
        const container = document.querySelector('.container-lg');
        container.insertBefore(successAlert, container.firstChild);
        
        // モーダルを閉じる
        const modal = bootstrap.Modal.getInstance(document.getElementById('lineLinkModal'));
        modal.hide();
        
        // 3秒後にページをリロード
        setTimeout(() => {
          window.location.reload();
        }, 3000);
      })
      .catch(error => {
        console.error('Error:', error);
        
        // エラーメッセージを表示
        const errorAlert = document.createElement('div');
        errorAlert.className = 'alert alert-danger alert-dismissible fade show';
        errorAlert.innerHTML = `
          <i class="fas fa-exclamation-triangle me-2"></i>
          <strong>エラー！</strong> LINE連携の作成に失敗しました: ${error.message}
          <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        `;
        
        // アラートを表示
        const container = document.querySelector('.container-lg');
        container.insertBefore(errorAlert, container.firstChild);
      })
      .finally(() => {
        // ボタンを元に戻す
        button.disabled = false;
        button.innerHTML = originalText;
      });
    }

    function removeLineLink() {
      if (confirm('LINE連携を解除しますか？\n\n注意: 連携解除後もユーザー情報は保持されますが、LINEからの自動更新は行われなくなります。')) {
        const userId = '<%= @user.id %>';
        const token = document.querySelector('meta[name="csrf-token"]')?.getAttribute('content');
        
        if (!token) {
          alert('セキュリティトークンが見つかりません。ページを再読み込みしてください。');
          return;
        }

        // ボタンを無効化
        const button = event.target;
        const originalText = button.textContent;
        button.disabled = true;
        button.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>解除中...';

        fetch(`/admin/users/${userId}/remove_line_link`, {
          method: 'DELETE',
          headers: {
            'X-CSRF-Token': token,
            'Content-Type': 'application/json',
            'Accept': 'application/json'
          }
        })
        .then(response => {
          if (response.ok) {
            return response.json();
          } else {
            throw new Error(`HTTP ${response.status}: ${response.statusText}`);
          }
        })
        .then(data => {
          // 成功メッセージを表示
          const successAlert = document.createElement('div');
          successAlert.className = 'alert alert-success alert-dismissible fade show';
          successAlert.innerHTML = `
            <i class="fas fa-check-circle me-2"></i>
            <strong>成功！</strong> LINE連携を解除しました。
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
          `;
          
          // アラートを表示
          const container = document.querySelector('.container-lg');
          container.insertBefore(successAlert, container.firstChild);
          
          // 3秒後にページをリロード
          setTimeout(() => {
            window.location.reload();
          }, 3000);
        })
        .catch(error => {
          console.error('Error:', error);
          
          // エラーメッセージを表示
          const errorAlert = document.createElement('div');
          errorAlert.className = 'alert alert-danger alert-dismissible fade show';
          errorAlert.innerHTML = `
            <i class="fas fa-exclamation-triangle me-2"></i>
            <strong>エラー！</strong> LINE連携の解除に失敗しました: ${error.message}
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
          `;
          
          // アラートを表示
          const container = document.querySelector('.container-lg');
          container.insertBefore(errorAlert, container.firstChild);
        })
        .finally(() => {
          // ボタンを元に戻す
          button.disabled = false;
          button.innerHTML = originalText;
        });
      }
    }
  </script>

  <!-- 🧑‍💼 顧客情報セクション -->
  <div class="card mb-5 shadow-sm">
    <div class="card-header bg-secondary text-white fw-bold d-flex justify-content-between align-items-center">
      <div>顧客情報</div>
      <div class="btn-group">
        <%= link_to "編集", edit_admin_user_path(@user), class: "btn btn-sm btn-light" %>
        <button type="button" class="btn btn-sm btn-danger ms-2" id="deleteUserBtn" 
                data-user-id="<%= @user.id %>"
                data-user-name="<%= @user.display_name_or_name.presence || @user.line_user_id || "ID:#{@user.id}" %>"
                data-active-tickets="<%= @active_tickets.count %>"
                data-total-usages="<%= @total_usages %>"
                data-remaining-value="<%= number_to_currency(@user.remaining_ticket_value, unit: "¥", precision: 0) %>">
          削除
        </button>
      </div>
    </div>
    <div class="card-body p-0">
      <table class="table table-bordered table-striped mb-0">
        <tbody>
          <tr>
            <th class="w-25 bg-light">会員番号</th>
            <td><%= @user.id %></td>
          </tr>
          <tr>
            <th class="bg-light">氏名</th>
            <td>
              <% if @user.display_name_or_name.present? %>
                <%= @user.display_name_or_name %>
                <% if @user.display_name.present? && @user.name.present? && @user.display_name != @user.name %>
                  <br><small class="text-muted">登録名: <%= @user.name %></small>
                <% end %>
              <% else %>
                <%= content_tag(:span, "未登録", class: "text-muted") %>
              <% end %>
            </td>
          </tr>
          <tr>
            <th class="bg-light">LINE表示名</th>
            <td>
              <% if @user.display_name.present? %>
                <%= @user.display_name %>
              <% else %>
                <%= content_tag(:span, "未取得", class: "text-muted") %>
              <% end %>
            </td>
          </tr>
          <tr>
            <th class="bg-light">LINEステータスメッセージ</th>
            <td>
              <% if @user.status_message.present? %>
                <%= @user.status_message %>
              <% else %>
                <%= content_tag(:span, "未設定", class: "text-muted") %>
              <% end %>
            </td>
          </tr>
          <tr>
            <th class="bg-light">LINE言語設定</th>
            <td>
              <% if @user.language.present? %>
                <%= @user.language %>
              <% else %>
                <%= content_tag(:span, "未取得", class: "text-muted") %>
              <% end %>
            </td>
          </tr>
          <tr>
            <th class="bg-light">生年月日</th>
            <td><%= @user.birth_date.present? ? l(@user.birth_date) : content_tag(:span, "未登録", class: "text-muted") %></td>
          </tr>
          <tr>
            <th class="bg-light">郵便番号</th>
            <td><%= @user.postal_code.presence || content_tag(:span, "未登録", class: "text-muted") %></td>
          </tr>
          <tr>
            <th class="bg-light">住所</th>
            <td><%= @user.address.presence || content_tag(:span, "未登録", class: "text-muted") %></td>
          </tr>
          <tr>
            <th class="bg-light">電話番号</th>
            <td><%= @user.phone_number.presence || content_tag(:span, "未登録", class: "text-muted") %></td>
          </tr>
          <tr>
            <th class="bg-light">メールアドレス</th>
            <td><%= @user.email.presence || content_tag(:span, "未登録", class: "text-muted") %></td>
          </tr>
        </tbody>
      </table>
    </div>
  </div>

  <!-- 削除確認モーダル -->
  <div class="modal fade" id="deleteUserModal" tabindex="-1" aria-labelledby="deleteUserModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header bg-danger text-white">
          <h5 class="modal-title" id="deleteUserModalLabel">
            <i class="fas fa-exclamation-triangle me-2"></i>ユーザー削除の確認
          </h5>
          <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="閉じる"></button>
        </div>
        <div class="modal-body">
          <div class="alert alert-danger">
            <h6><i class="fas fa-warning me-2"></i>重要：この操作は取り消せません</h6>
            <p class="mb-0">以下のユーザーとすべての関連データが完全に削除されます。</p>
          </div>

          <div class="card mb-3">
            <div class="card-header bg-light">
              <h6 class="mb-0">削除対象ユーザー</h6>
            </div>
            <div class="card-body">
              <div class="row">
                <div class="col-sm-4"><strong>氏名:</strong></div>
                <div class="col-sm-8" id="deleteUserName"></div>
              </div>
              <div class="row">
                <div class="col-sm-4"><strong>会員番号:</strong></div>
                <div class="col-sm-8" id="deleteUserId"></div>
              </div>
            </div>
          </div>

          <div class="card mb-3">
            <div class="card-header bg-warning text-dark">
              <h6 class="mb-0">同時に削除される関連データ</h6>
            </div>
            <div class="card-body">
              <ul class="list-unstyled mb-0">
                <li><i class="fas fa-ticket-alt text-primary me-2"></i>アクティブチケット: <span id="deleteActiveTickets"></span>枚</li>
                <li><i class="fas fa-history text-info me-2"></i>使用履歴: <span id="deleteTotalUsages"></span>件</li>
                <li><i class="fas fa-yen-sign text-success me-2"></i>残額: <span id="deleteRemainingValue"></span></li>
                <li><i class="fas fa-calendar text-warning me-2"></i>予約データ（user_idのみnullに変更）</li>
                <li><i class="fas fa-bell text-secondary me-2"></i>通知設定・ログ</li>
              </ul>
            </div>
          </div>

          <div class="form-check mb-3">
            <input class="form-check-input" type="checkbox" id="confirmDeletionCheck">
            <label class="form-check-label" for="confirmDeletionCheck">
              <strong>上記の内容を理解し、削除を実行することに同意します</strong>
            </label>
          </div>

          <div class="mb-3">
            <label for="confirmationText" class="form-label">
              確認のため、ユーザー名「<span id="confirmUserName"></span>」を入力してください：
            </label>
            <input type="text" class="form-control" id="confirmationText" placeholder="ユーザー名を正確に入力">
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">キャンセル</button>
          <button type="button" class="btn btn-danger" id="confirmDeleteBtn" disabled>
            <i class="fas fa-trash me-1"></i>削除を実行
          </button>
        </div>
      </div>
    </div>
  </div>

  <script>
  document.addEventListener('DOMContentLoaded', function() {
    const deleteBtn = document.getElementById('deleteUserBtn');
    const modal = document.getElementById('deleteUserModal');
    const confirmCheck = document.getElementById('confirmDeletionCheck');
    const confirmationText = document.getElementById('confirmationText');
    const confirmDeleteBtn = document.getElementById('confirmDeleteBtn');
    
    if (!deleteBtn || !modal) return;
    
    let currentUserId = null;
    let currentUserName = null;
    
    // 削除ボタンクリック時
    deleteBtn.addEventListener('click', function() {
      currentUserId = this.getAttribute('data-user-id');
      currentUserName = this.getAttribute('data-user-name');
      const activeTickets = this.getAttribute('data-active-tickets');
      const totalUsages = this.getAttribute('data-total-usages');
      const remainingValue = this.getAttribute('data-remaining-value');
      
      // モーダルにデータを設定
      document.getElementById('deleteUserName').textContent = currentUserName;
      document.getElementById('deleteUserId').textContent = currentUserId;
      document.getElementById('deleteActiveTickets').textContent = activeTickets;
      document.getElementById('deleteTotalUsages').textContent = totalUsages;
      document.getElementById('deleteRemainingValue').textContent = remainingValue;
      document.getElementById('confirmUserName').textContent = currentUserName;
      
      // フォームをリセット
      confirmCheck.checked = false;
      confirmationText.value = '';
      confirmDeleteBtn.disabled = true;
      
      // モーダルを表示
      new bootstrap.Modal(modal).show();
    });
    
    // バリデーション関数
    function validateForm() {
      const isChecked = confirmCheck.checked;
      const textMatches = confirmationText.value.trim() === currentUserName;
      
      confirmDeleteBtn.disabled = !(isChecked && textMatches);
      
      // 入力テキストの色を変更
      if (confirmationText.value.trim() === '') {
        confirmationText.className = 'form-control';
      } else if (textMatches) {
        confirmationText.className = 'form-control is-valid';
      } else {
        confirmationText.className = 'form-control is-invalid';
      }
    }
    
    // バリデーション実行
    confirmCheck.addEventListener('change', validateForm);
    confirmationText.addEventListener('input', validateForm);
    
    // 最終削除実行
    confirmDeleteBtn.addEventListener('click', function() {
      if (this.disabled) return;
      
      this.disabled = true;
      this.innerHTML = '<i class="fas fa-spinner fa-spin me-1"></i>削除中...';
      
      // CSRF トークンを取得
      const csrfToken = document.querySelector('meta[name="csrf-token"]')?.getAttribute('content');
      
      // 削除リクエストを送信
      fetch(`/admin/users/${currentUserId}`, {
        method: 'DELETE',
        headers: {
          'X-CSRF-Token': csrfToken,
          'Content-Type': 'application/json'
        }
      })
      .then(response => {
        if (response.redirected) {
          // 成功時はリダイレクトされる
          window.location.href = response.url;
        } else if (!response.ok) {
          throw new Error(`HTTP ${response.status}`);
        }
      })
      .catch(error => {
        console.error('削除エラー:', error);
        alert('削除中にエラーが発生しました: ' + error.message);
        
        // ボタンを元に戻す
        this.disabled = false;
        this.innerHTML = '<i class="fas fa-trash me-1"></i>削除を実行';
      });
    });
    
    // モーダルが閉じられたときのクリーンアップ
    modal.addEventListener('hidden.bs.modal', function() {
      confirmCheck.checked = false;
      confirmationText.value = '';
      confirmationText.className = 'form-control';
      confirmDeleteBtn.disabled = true;
      confirmDeleteBtn.innerHTML = '<i class="fas fa-trash me-1"></i>削除を実行';
    });
  });
  </script>
  
  <div class="card mb-4 shadow-sm">
    <div class="card-header bg-warning text-dark fw-bold">管理者メモ</div>
    <div class="card-body">
      <% if @user.admin_memo.present? %>
        <pre class="mb-0"><%= @user.admin_memo %></pre>
      <% else %>
        <p class="text-muted mb-0">メモは登録されていません。</p>
      <% end %>
    </div>
  </div>

  <!-- 📊 利用状況サマリー -->
  <div class="card mb-4 shadow-sm">
    <div class="card-header bg-info text-white fw-bold">
      利用状況サマリー
    </div>
    <div class="card-body">
      <ul class="list-group list-group-flush">
        <li class="list-group-item">累計使用回数：<strong><%= @total_usages %></strong></li>
        <li class="list-group-item">最終使用日：
          <strong>
            <%= @last_used_at.present? ? @last_used_at.strftime('%Y-%m-%d') : "未使用" %>
          </strong>
        </li>
        <li class="list-group-item">アクティブチケット数：<strong><%= @active_tickets.count %></strong></li>
        <li class="list-group-item">
          アクティブチケット種類：
          <% if @active_ticket_types.present? %>
            <ul class="mb-0 ps-3">
              <% @active_ticket_types.each do |title, count| %>
                <li><%= title %>（<%= count %> 枚）</li>
              <% end %>
            </ul>
          <% else %>
            <span class="text-muted">なし</span>
          <% end %>
        </li>
      </ul>
    </div>
  </div>

  <!-- 🎫 チケット管理へのリンク -->
  <div class="card mb-5 shadow-sm">
    <div class="card-header bg-dark text-white fw-bold">
      チケット管理
    </div>
    <div class="card-body text-center">
      <p class="mb-3">チケットの発行・消化・削除を行うには、専用のチケット管理ページをご利用ください。</p>
      <%= link_to "チケット管理ページへ", ticket_management_admin_user_path(@user), 
          class: "btn btn-primary btn-lg" %>
    </div>
  </div>

  <!-- 🎫 所持チケット一覧（表示のみ） -->
  <div class="card mb-5 shadow-sm">
    <div class="card-header bg-success text-white fw-bold">
      所持チケット一覧（表示のみ）
    </div>
    <div class="card-body p-0">
      <% if @active_tickets.any? %>
        <div class="table-responsive">
          <table class="table table-hover table-striped align-middle mb-0">
            <thead class="table-light text-center">
              <tr>
                <th>チケット名</th>
                <th>購入日</th>
                <th>有効期限</th>
                <th>消化済</th>
                <th>残数</th>
              </tr>
            </thead>
            <tbody>
              <% @active_tickets.each do |ticket| %>
                <tr>
                  <td class="text-center"><%= ticket.ticket_template.name %></td>
                  <td class="text-nowrap text-center"><%= ticket.purchase_date.strftime("%Y-%m-%d") %></td>
                  <td class="text-nowrap text-center">
                    <% if ticket.expiry_date < Time.zone.today %>
                      <span class="badge bg-danger me-1">期限切れ</span>
                      <span class="text-muted"><%= ticket.expiry_date.strftime("%Y-%m-%d") %></span>
                    <% elsif ticket.expiry_date < 1.month.from_now %>
                      <span class="badge bg-warning text-dark me-1">期限間近</span>
                      <%= ticket.expiry_date.strftime("%Y-%m-%d") %>
                    <% else %>
                      <%= ticket.expiry_date.strftime("%Y-%m-%d") %>
                    <% end %>
                  </td>
                  <td class="text-center"><%= ticket.total_count - ticket.remaining_count %> 回</td>
                  <td class="text-center fw-bold"><%= ticket.remaining_count %> 回</td>
                </tr>
              <% end %>
            </tbody>
          </table>
        </div>
      <% else %>
        <div class="p-3">
          <p class="text-muted">使用可能なチケットはありません。</p>
        </div>
      <% end %>
    </div>
  </div>

  <!-- 🕒 最近の使用履歴 -->
  <div class="card mb-5 shadow-sm">
    <div class="card-header bg-primary text-white fw-bold">
      最近のチケット使用履歴（最新10件）
    </div>
    <div class="card-body p-0">
      <% if @recent_ticket_usages.any? %>
        <table class="table table-striped table-hover align-middle mb-0">
          <thead class="table-light">
            <tr>
              <th>チケット名</th>
              <th>使用日時</th>
              <th>残回数</th>
              <th>メモ</th>
              <th></th>
            </tr>
          </thead>
          <tbody>
            <% @recent_ticket_usages.each do |usage| %>
              <tr>
                <td><%= usage.ticket.ticket_template.name %></td>
                <td><%= usage.used_at.strftime('%Y-%m-%d %H:%M') %></td>
                <td><%= usage.ticket.remaining_count %> 回</td>
                <td><%= usage.note.present? ? truncate(usage.note, length: 30) : "—" %></td>
                <td>
                  <%= link_to "詳細・編集", edit_admin_ticket_usage_path(usage), class: "btn btn-sm btn-outline-primary" %>
                </td>
              </tr>
            <% end %>
          </tbody>
        </table>
      <% else %>
        <div class="p-3">
          <p class="text-muted">まだ使用履歴がありません。</p>
        </div>
      <% end %>
      <p class="mt-3 px-3">
        <%= link_to "全ての使用履歴を見る", ticket_usages_admin_user_path(@user), class: "btn btn-outline-secondary btn-sm" %>
      </p>
    </div>
  </div>
  
  <!-- 🗂 使用済みチケット一覧 -->
  <div class="card shadow-sm">
    <div class="card-header bg-secondary text-white fw-bold">
      使用済みチケット
    </div>
    <div class="card-body p-0">
      <% if @used_up_tickets.any? %>
        <table class="table table-hover table-striped align-middle mb-0">
          <thead class="table-light">
            <tr>
              <th>チケット名</th>
              <th>残回数</th>
              <th>購入日</th>
              <th>有効期限</th>
            </tr>
          </thead>
          <tbody>
                          <% @used_up_tickets.each do |ticket| %>
                <tr>
                  <td><%= ticket.ticket_template.name %></td>
                  <td>0 / <%= ticket.total_count %></td>
                  <td><%= ticket.purchase_date.strftime("%Y-%m-%d") %></td>
                  <td><%= ticket.expiry_date.strftime("%Y-%m-%d") %></td>
                </tr>
              <% end %>
          </tbody>
        </table>
      <% else %>
        <div class="p-3">
          <p class="text-muted">使用済みチケットはまだありません。</p>
        </div>
      <% end %>
    </div>
  </div>
</div>